;gnu clisp 2.49

(defun even_elems (L)
    (cond
        (( = (mod (countElems L) 2) 0) T)
        (T NIL)
    )
)

(defun countElems (l)
    (cond 
        ((NULL l) 0)
        (T (+ 1 (countElems (cdr l))))
    )
)

;(print (countElems '()))

(defun is_linear( L )
    (cond
        ((NULL L) T)
        ((listp (car L)) NIL)
        (T (is_linear(cdr L)))
    )
)

(print (even_elems '(1 3 8)))

(defun remover (L)
    (cond 
        ((NULL L) NIL)
        ((and(LISTP (car L))(and (is_linear (car L)) (even_elems ( car L)))) ( remover (cdr L)))
        ( T (cons (car L)(remover (cdr L))))
    )
)

(print (remover '(1 2 3 (4 5) 7 (4 5 6) 6)))

;(print (and (is_linear '(1 2 3)) (even_elems '(1 3))))